#!/usr/bin/python
"""
Custom topology for Mininet, generated by GraphML-Topo-to-Mininet-Network-Generator.
"""
from mininet.topo import Topo
from mininet.net import Mininet
from mininet.node import RemoteController
from mininet.node import Node
from mininet.node import CPULimitedHost
from mininet.link import TCLink
from mininet.cli import CLI
from mininet.log import setLogLevel
from mininet.util import dumpNodeConnections


class NodeID(object):
    "Topo node identifier."

    def __init__(self, dpid = None):
        "Init."

        "@param dpid dpid"
        
        # DPID-compatible hashable identifier: opaque 64-bit unsigned int
        self.dpid = dpid

    def __str__(self):
        "String conversion."

        "@return str dpid as string"
        
        return str(self.dpid)

    def name_str(self):
        "Name conversion."

        "@return name name as string"
        
        return str(self.dpid)

    def ip_str(self):
        "Name conversion."

        "@return ip ip as string"
        
        hi = (self.dpid & 0xff0000) >> 16
        mid = (self.dpid & 0xff00) >> 8
        lo = self.dpid & 0xff
        return "10.%i.%i.%i" % (hi, mid, lo)

class ZooNodeID(NodeID):
        "Fat Tree-specific node."

        def __init__(self, pod = 0, sw = 0, host = 0, dpid = None, name = None):
            "Create FatTreeNodeID object from custom params."

            "Either (pod, sw, host) or dpid must be passed in."

            "@param pod pod ID"
            "@param sw switch ID"
            "@param host host ID"
            "@param dpid optional dpid"
            "@param name optional name"
            
            if dpid:
                self.pod = (dpid & 0xff0000) >> 16
                self.sw = (dpid & 0xff00) >> 8
                self.host = (dpid & 0xff)
                self.dpid = dpid
            elif name:
                pod, sw, host = [int(s) for s in name.split('_')]
                self.pod = pod
                self.sw = sw
                self.host = host
                self.dpid = (pod << 16) + (sw << 8) + host
            else:
                self.pod = pod
                self.sw = sw
                self.host = host
                self.dpid = (pod << 16) + (sw << 8) + host

        def __str__(self):
            return "(%i, %i, %i)" % (self.pod, self.sw, self.host)

        def name_str(self):
            "Return name string"
            return "%i_%i_%i" % (self.pod, self.sw, self.host)

        def mac_str(self):
            "Return MAC string"
            return "00:00:00:%02x:%02x:%02x" % (self.pod, self.sw, self.host)

        def ip_str(self):
            "Return IP string"
            return "10.%i.%i.%i" % (self.pod, self.sw, self.host)


def def_nopts(zoonodeid, layer, name = None):
        "Return default dict for a FatTree topo."

        "@param layer layer of node"
        "@param name name of node"
        "@return d dict with layer key/val pair, plus anything else (later)"
        
        d = {'layer': layer}
        if name:
            id = zoonodeid(name = name)
            # For hosts only, set the IP
            if layer == 3:
              d.update({'ip': id.ip_str()})
              d.update({'mac': id.mac_str()})
            d.update({'dpid': "%016x" % id.dpid})
        return d

class GeneratedTopo( Topo ):
    "Internet Topology Zoo Specimen."
    def __init__( self, **opts ):
        "Create a topology."
        # Initialize Topology
        self.switchList={}
        self.hostList={}
        Topo.__init__( self, **opts )

        # add nodes, switches first...
        id_gen_0 = ZooNodeID 
        edge_id = id_gen_0(0,0, 1).name_str()
        edge_opts = def_nopts(id_gen_0,0, edge_id)
        Zurich = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_1 = ZooNodeID 
        edge_id = id_gen_1(0,1, 1).name_str()
        edge_opts = def_nopts(id_gen_1,0, edge_id)
        Geneva = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_2 = ZooNodeID 
        edge_id = id_gen_2(0,2, 1).name_str()
        edge_opts = def_nopts(id_gen_2,0, edge_id)
        Budapest = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_3 = ZooNodeID 
        edge_id = id_gen_3(0,3, 1).name_str()
        edge_opts = def_nopts(id_gen_3,0, edge_id)
        Stuttgart = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_4 = ZooNodeID 
        edge_id = id_gen_4(0,4, 1).name_str()
        edge_opts = def_nopts(id_gen_4,0, edge_id)
        Madrid = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_5 = ZooNodeID 
        edge_id = id_gen_5(0,5, 1).name_str()
        edge_opts = def_nopts(id_gen_5,0, edge_id)
        Lisbon = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_6 = ZooNodeID 
        edge_id = id_gen_6(0,6, 1).name_str()
        edge_opts = def_nopts(id_gen_6,0, edge_id)
        Milan = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_7 = ZooNodeID 
        edge_id = id_gen_7(0,7, 1).name_str()
        edge_opts = def_nopts(id_gen_7,0, edge_id)
        Barcelona = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_8 = ZooNodeID 
        edge_id = id_gen_8(0,8, 1).name_str()
        edge_opts = def_nopts(id_gen_8,0, edge_id)
        Paris = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_9 = ZooNodeID 
        edge_id = id_gen_9(0,9, 1).name_str()
        edge_opts = def_nopts(id_gen_9,0, edge_id)
        London = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_10 = ZooNodeID 
        edge_id = id_gen_10(0,10, 1).name_str()
        edge_opts = def_nopts(id_gen_10,0, edge_id)
        Tokyo = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_11 = ZooNodeID 
        edge_id = id_gen_11(0,11, 1).name_str()
        edge_opts = def_nopts(id_gen_11,0, edge_id)
        Chicago = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_12 = ZooNodeID 
        edge_id = id_gen_12(0,12, 1).name_str()
        edge_opts = def_nopts(id_gen_12,0, edge_id)
        Washington = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_13 = ZooNodeID 
        edge_id = id_gen_13(0,13, 1).name_str()
        edge_opts = def_nopts(id_gen_13,0, edge_id)
        Miami = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_14 = ZooNodeID 
        edge_id = id_gen_14(0,14, 1).name_str()
        edge_opts = def_nopts(id_gen_14,0, edge_id)
        LosAngeles = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_15 = ZooNodeID 
        edge_id = id_gen_15(0,15, 1).name_str()
        edge_opts = def_nopts(id_gen_15,0, edge_id)
        PaloAlto = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_16 = ZooNodeID 
        edge_id = id_gen_16(0,16, 1).name_str()
        edge_opts = def_nopts(id_gen_16,0, edge_id)
        SanJose = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_17 = ZooNodeID 
        edge_id = id_gen_17(0,17, 1).name_str()
        edge_opts = def_nopts(id_gen_17,0, edge_id)
        HongKong = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_18 = ZooNodeID 
        edge_id = id_gen_18(0,18, 1).name_str()
        edge_opts = def_nopts(id_gen_18,0, edge_id)
        Singapore = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_19 = ZooNodeID 
        edge_id = id_gen_19(0,19, 1).name_str()
        edge_opts = def_nopts(id_gen_19,0, edge_id)
        Toronto = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_20 = ZooNodeID 
        edge_id = id_gen_20(0,20, 1).name_str()
        edge_opts = def_nopts(id_gen_20,0, edge_id)
        NewYork = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_21 = ZooNodeID 
        edge_id = id_gen_21(0,21, 1).name_str()
        edge_opts = def_nopts(id_gen_21,0, edge_id)
        Frankfurt = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_22 = ZooNodeID 
        edge_id = id_gen_22(0,22, 1).name_str()
        edge_opts = def_nopts(id_gen_22,0, edge_id)
        Cologne = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_23 = ZooNodeID 
        edge_id = id_gen_23(0,23, 1).name_str()
        edge_opts = def_nopts(id_gen_23,0, edge_id)
        Hanover = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_24 = ZooNodeID 
        edge_id = id_gen_24(0,24, 1).name_str()
        edge_opts = def_nopts(id_gen_24,0, edge_id)
        Amsterdam = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_25 = ZooNodeID 
        edge_id = id_gen_25(0,25, 1).name_str()
        edge_opts = def_nopts(id_gen_25,0, edge_id)
        Ashburn = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_26 = ZooNodeID 
        edge_id = id_gen_26(0,26, 1).name_str()
        edge_opts = def_nopts(id_gen_26,0, edge_id)
        Hamburg = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_27 = ZooNodeID 
        edge_id = id_gen_27(0,27, 1).name_str()
        edge_opts = def_nopts(id_gen_27,0, edge_id)
        Dortmund = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_28 = ZooNodeID 
        edge_id = id_gen_28(0,28, 1).name_str()
        edge_opts = def_nopts(id_gen_28,0, edge_id)
        Dusseldorf = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_29 = ZooNodeID 
        edge_id = id_gen_29(0,29, 1).name_str()
        edge_opts = def_nopts(id_gen_29,0, edge_id)
        Vienna = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_30 = ZooNodeID 
        edge_id = id_gen_30(0,30, 1).name_str()
        edge_opts = def_nopts(id_gen_30,0, edge_id)
        Munich = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_31 = ZooNodeID 
        edge_id = id_gen_31(0,31, 1).name_str()
        edge_opts = def_nopts(id_gen_31,0, edge_id)
        Copenhagen = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_32 = ZooNodeID 
        edge_id = id_gen_32(0,32, 1).name_str()
        edge_opts = def_nopts(id_gen_32,0, edge_id)
        Stockholm = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_33 = ZooNodeID 
        edge_id = id_gen_33(0,33, 1).name_str()
        edge_opts = def_nopts(id_gen_33,0, edge_id)
        Warsaw = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_34 = ZooNodeID 
        edge_id = id_gen_34(0,34, 1).name_str()
        edge_opts = def_nopts(id_gen_34,0, edge_id)
        Moscow = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_35 = ZooNodeID 
        edge_id = id_gen_35(0,35, 1).name_str()
        edge_opts = def_nopts(id_gen_35,0, edge_id)
        Berlin = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_36 = ZooNodeID 
        edge_id = id_gen_36(0,36, 1).name_str()
        edge_opts = def_nopts(id_gen_36,0, edge_id)
        Leipzig = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_37 = ZooNodeID 
        edge_id = id_gen_37(0,37, 1).name_str()
        edge_opts = def_nopts(id_gen_37,0, edge_id)
        Prague = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 


        id_gen_38 = ZooNodeID 
        edge_id = id_gen_38(0,38, 1).name_str()
        edge_opts = def_nopts(id_gen_38,0, edge_id)
        Nuremberg = self.addSwitch( edge_id,**edge_opts )
        self.switchList[edge_id] = edge_opts 



        # ... and now hosts
        host_id = id_gen_0(3,0,1).name_str()
        host_opts = def_nopts(id_gen_0,3, host_id)
        Zurich_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_1(3,1,2).name_str()
        host_opts = def_nopts(id_gen_1,3, host_id)
        Geneva_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_2(3,2,3).name_str()
        host_opts = def_nopts(id_gen_2,3, host_id)
        Budapest_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_3(3,3,4).name_str()
        host_opts = def_nopts(id_gen_3,3, host_id)
        Stuttgart_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_4(3,4,5).name_str()
        host_opts = def_nopts(id_gen_4,3, host_id)
        Madrid_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_5(3,5,6).name_str()
        host_opts = def_nopts(id_gen_5,3, host_id)
        Lisbon_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_6(3,6,7).name_str()
        host_opts = def_nopts(id_gen_6,3, host_id)
        Milan_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_7(3,7,8).name_str()
        host_opts = def_nopts(id_gen_7,3, host_id)
        Barcelona_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_8(3,8,9).name_str()
        host_opts = def_nopts(id_gen_8,3, host_id)
        Paris_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_9(3,9,10).name_str()
        host_opts = def_nopts(id_gen_9,3, host_id)
        London_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_10(3,10,11).name_str()
        host_opts = def_nopts(id_gen_10,3, host_id)
        Tokyo_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_11(3,11,12).name_str()
        host_opts = def_nopts(id_gen_11,3, host_id)
        Chicago_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_12(3,12,13).name_str()
        host_opts = def_nopts(id_gen_12,3, host_id)
        Washington_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_13(3,13,14).name_str()
        host_opts = def_nopts(id_gen_13,3, host_id)
        Miami_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_14(3,14,15).name_str()
        host_opts = def_nopts(id_gen_14,3, host_id)
        LosAngeles_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_15(3,15,16).name_str()
        host_opts = def_nopts(id_gen_15,3, host_id)
        PaloAlto_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_16(3,16,17).name_str()
        host_opts = def_nopts(id_gen_16,3, host_id)
        SanJose_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_17(3,17,18).name_str()
        host_opts = def_nopts(id_gen_17,3, host_id)
        HongKong_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_18(3,18,19).name_str()
        host_opts = def_nopts(id_gen_18,3, host_id)
        Singapore_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_19(3,19,20).name_str()
        host_opts = def_nopts(id_gen_19,3, host_id)
        Toronto_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_20(3,20,21).name_str()
        host_opts = def_nopts(id_gen_20,3, host_id)
        NewYork_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_21(3,21,22).name_str()
        host_opts = def_nopts(id_gen_21,3, host_id)
        Frankfurt_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_22(3,22,23).name_str()
        host_opts = def_nopts(id_gen_22,3, host_id)
        Cologne_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_23(3,23,24).name_str()
        host_opts = def_nopts(id_gen_23,3, host_id)
        Hanover_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_24(3,24,25).name_str()
        host_opts = def_nopts(id_gen_24,3, host_id)
        Amsterdam_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_25(3,25,26).name_str()
        host_opts = def_nopts(id_gen_25,3, host_id)
        Ashburn_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_26(3,26,27).name_str()
        host_opts = def_nopts(id_gen_26,3, host_id)
        Hamburg_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_27(3,27,28).name_str()
        host_opts = def_nopts(id_gen_27,3, host_id)
        Dortmund_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_28(3,28,29).name_str()
        host_opts = def_nopts(id_gen_28,3, host_id)
        Dusseldorf_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_29(3,29,30).name_str()
        host_opts = def_nopts(id_gen_29,3, host_id)
        Vienna_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_30(3,30,31).name_str()
        host_opts = def_nopts(id_gen_30,3, host_id)
        Munich_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_31(3,31,32).name_str()
        host_opts = def_nopts(id_gen_31,3, host_id)
        Copenhagen_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_32(3,32,33).name_str()
        host_opts = def_nopts(id_gen_32,3, host_id)
        Stockholm_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_33(3,33,34).name_str()
        host_opts = def_nopts(id_gen_33,3, host_id)
        Warsaw_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_34(3,34,35).name_str()
        host_opts = def_nopts(id_gen_34,3, host_id)
        Moscow_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_35(3,35,36).name_str()
        host_opts = def_nopts(id_gen_35,3, host_id)
        Berlin_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_36(3,36,37).name_str()
        host_opts = def_nopts(id_gen_36,3, host_id)
        Leipzig_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_37(3,37,38).name_str()
        host_opts = def_nopts(id_gen_37,3, host_id)
        Prague_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 


        host_id = id_gen_38(3,38,39).name_str()
        host_opts = def_nopts(id_gen_38,3, host_id)
        Nuremberg_host = self.addHost( host_id,**host_opts )
        self.hostList[host_id] = host_opts 



        # add edges between switch and corresponding host
        self.addLink( Zurich , Zurich_host )
        self.addLink( Geneva , Geneva_host )
        self.addLink( Budapest , Budapest_host )
        self.addLink( Stuttgart , Stuttgart_host )
        self.addLink( Madrid , Madrid_host )
        self.addLink( Lisbon , Lisbon_host )
        self.addLink( Milan , Milan_host )
        self.addLink( Barcelona , Barcelona_host )
        self.addLink( Paris , Paris_host )
        self.addLink( London , London_host )
        self.addLink( Tokyo , Tokyo_host )
        self.addLink( Chicago , Chicago_host )
        self.addLink( Washington , Washington_host )
        self.addLink( Miami , Miami_host )
        self.addLink( LosAngeles , LosAngeles_host )
        self.addLink( PaloAlto , PaloAlto_host )
        self.addLink( SanJose , SanJose_host )
        self.addLink( HongKong , HongKong_host )
        self.addLink( Singapore , Singapore_host )
        self.addLink( Toronto , Toronto_host )
        self.addLink( NewYork , NewYork_host )
        self.addLink( Frankfurt , Frankfurt_host )
        self.addLink( Cologne , Cologne_host )
        self.addLink( Hanover , Hanover_host )
        self.addLink( Amsterdam , Amsterdam_host )
        self.addLink( Ashburn , Ashburn_host )
        self.addLink( Hamburg , Hamburg_host )
        self.addLink( Dortmund , Dortmund_host )
        self.addLink( Dusseldorf , Dusseldorf_host )
        self.addLink( Vienna , Vienna_host )
        self.addLink( Munich , Munich_host )
        self.addLink( Copenhagen , Copenhagen_host )
        self.addLink( Stockholm , Stockholm_host )
        self.addLink( Warsaw , Warsaw_host )
        self.addLink( Moscow , Moscow_host )
        self.addLink( Berlin , Berlin_host )
        self.addLink( Leipzig , Leipzig_host )
        self.addLink( Prague , Prague_host )
        self.addLink( Nuremberg , Nuremberg_host )

        # add edges between switches
        self.addLink( Zurich , Paris)
        self.addLink( Zurich , Geneva)
        self.addLink( Zurich , Stuttgart)
        self.addLink( Zurich , Milan)
        self.addLink( Zurich , Barcelona)
        self.addLink( Geneva , Paris)
        self.addLink( Geneva , Milan)
        self.addLink( Budapest , Vienna)
        self.addLink( Budapest , Munich)
        self.addLink( Madrid , Paris)
        self.addLink( Madrid , Lisbon)
        self.addLink( Madrid , Barcelona)
        self.addLink( Milan , Paris)
        self.addLink( Paris , London)
        self.addLink( Paris , Frankfurt)
        self.addLink( Paris , Amsterdam)
        self.addLink( Paris , Ashburn)
        self.addLink( London , NewYork)
        self.addLink( London , Frankfurt)
        self.addLink( London , Amsterdam)
        self.addLink( London , Ashburn)
        self.addLink( London , Dusseldorf)
        self.addLink( Tokyo , SanJose)
        self.addLink( Tokyo , HongKong)
        self.addLink( Chicago , Toronto)
        self.addLink( Chicago , NewYork)
        self.addLink( Chicago , PaloAlto)
        self.addLink( Washington , Ashburn)
        self.addLink( Washington , NewYork)
        self.addLink( Washington , Miami)
        self.addLink( Washington , LosAngeles)
        self.addLink( LosAngeles , SanJose)
        self.addLink( LosAngeles , HongKong)
        self.addLink( LosAngeles , Singapore)
        self.addLink( LosAngeles , PaloAlto)
        self.addLink( PaloAlto , SanJose)
        self.addLink( PaloAlto , Ashburn)
        self.addLink( PaloAlto , NewYork)
        self.addLink( SanJose , NewYork)
        self.addLink( HongKong , Singapore)
        self.addLink( Singapore , Frankfurt)
        self.addLink( Toronto , NewYork)
        self.addLink( NewYork , Leipzig)
        self.addLink( NewYork , Frankfurt)
        self.addLink( NewYork , Hanover)
        self.addLink( NewYork , Dusseldorf)
        self.addLink( Frankfurt , Moscow)
        self.addLink( Frankfurt , Amsterdam)
        self.addLink( Frankfurt , Ashburn)
        self.addLink( Hanover , Ashburn)
        self.addLink( Amsterdam , Hamburg)
        self.addLink( Amsterdam , Dusseldorf)
        self.addLink( Ashburn , Leipzig)
        self.addLink( Ashburn , Dusseldorf)
        self.addLink( Hamburg , Stockholm)
        self.addLink( Hamburg , Copenhagen)
        self.addLink( Vienna , Prague)
        self.addLink( Vienna , Munich)
        self.addLink( Copenhagen , Stockholm)
        self.addLink( Warsaw , Berlin)
        self.addLink( Warsaw , Nuremberg)
        self.addLink( Prague , Nuremberg)

topos = { 'generated': ( lambda: GeneratedTopo() ) }
# HERE THE CODE DEFINITION OF THE TOPOLOGY ENDS
# the following code produces an executable script working with a remote controller
# and providing ssh access to the the mininet hosts from within the ubuntu vm
